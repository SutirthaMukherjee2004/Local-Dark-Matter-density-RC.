%!PS-Adobe-2.0
%%Title: Fig3_6.BB_lz_clr.eps
%%Creator: gnuplot 4.4 patchlevel 3
%%CreationDate: Wed Oct 16 15:43:34 2013
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 554 770
%%Orientation: Landscape
%%Pages: (atend)
%%EndComments
%%BeginProlog
/gnudict 256 dict def
gnudict begin
%
% The following true/false flags may be edited by hand if desired.
% The unit line width and grayscale image gamma correction may also be changed.
%
/Color true def
/Blacktext false def
/Solid false def
/Dashlength 1 def
/Landscape true def
/Level1 false def
/Rounded false def
/ClipToBoundingBox false def
/TransparentPatterns false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
/Gamma 1.0 def
%
/vshift -83 def
/dl1 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul sub dup 0 le { pop 0.01 } if } if
} def
/dl2 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul add } if
} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
Level1 {} {
/SDict 10 dict def
systemdict /pdfmark known not {
  userdict /pdfmark systemdict /cleartomark get put
} if
SDict begin [
  /Title (Fig3_6.BB_lz_clr.eps)
  /Subject (gnuplot plot)
  /Creator (gnuplot 4.4 patchlevel 3)
  /Author (soumini)
%  /Producer (gnuplot)
%  /Keywords ()
  /CreationDate (Wed Oct 16 15:43:34 2013)
  /DOCINFO pdfmark
end
} ifelse
/doclip {
  ClipToBoundingBox {
    newpath 50 50 moveto 554 50 lineto 554 770 lineto 50 770 lineto closepath
    clip
  } if
} def
%
% Gnuplot Prolog Version 4.4 (August 2010)
%
%/SuppressPDFMark true def
%
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/N {newpath moveto} bind def
/Z {closepath} bind def
/C {setrgbcolor} bind def
/f {rlineto fill} bind def
/g {setgray} bind def
/Gshow {show} def   % May be redefined later in the file to support UTF-8
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow {currentpoint stroke M 0 vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Rshow {currentpoint stroke M dup stringwidth pop neg vshift R
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Cshow {currentpoint stroke M dup stringwidth pop -2 div vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/UP {dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def} def
/DL {Color {setrgbcolor Solid {pop []} if 0 setdash}
 {pop pop pop 0 setgray Solid {pop []} if 0 setdash} ifelse} def
/BL {stroke userlinewidth 2 mul setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/AL {stroke userlinewidth 2 div setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/UL {dup gnulinewidth mul /userlinewidth exch def
	dup 1 lt {pop 1} if 10 mul /udl exch def} def
/PL {stroke userlinewidth setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
3.8 setmiterlimit
% Default Line colors
/LCw {1 1 1} def
/LCb {0 0 0} def
/LCa {0 0 0} def
/LC0 {1 0 0} def
/LC1 {0 1 0} def
/LC2 {0 0 1} def
/LC3 {1 0 1} def
/LC4 {0 1 1} def
/LC5 {1 1 0} def
/LC6 {0 0 0} def
/LC7 {1 0.3 0} def
/LC8 {0.5 0.5 0.5} def
% Default Line Types
/LTw {PL [] 1 setgray} def
/LTb {BL [] LCb DL} def
/LTa {AL [1 udl mul 2 udl mul] 0 setdash LCa setrgbcolor} def
/LT0 {PL [] LC0 DL} def
/LT1 {PL [4 dl1 2 dl2] LC1 DL} def
/LT2 {PL [2 dl1 3 dl2] LC2 DL} def
/LT3 {PL [1 dl1 1.5 dl2] LC3 DL} def
/LT4 {PL [6 dl1 2 dl2 1 dl1 2 dl2] LC4 DL} def
/LT5 {PL [3 dl1 3 dl2 1 dl1 3 dl2] LC5 DL} def
/LT6 {PL [2 dl1 2 dl2 2 dl1 6 dl2] LC6 DL} def
/LT7 {PL [1 dl1 2 dl2 6 dl1 2 dl2 1 dl1 2 dl2] LC7 DL} def
/LT8 {PL [2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 4 dl2] LC8 DL} def
/Pnt {stroke [] 0 setdash gsave 1 setlinecap M 0 0 V stroke grestore} def
/Dia {stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt} def
/Pls {stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
 } def
/Box {stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt} def
/Crs {stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke} def
/TriU {stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt} def
/Star {2 copy Pls Crs} def
/BoxF {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath fill} def
/TriUF {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill} def
/TriD {stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt} def
/TriDF {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill} def
/Pent {stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt} def
/PentF {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore} def
/Circle {stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt} def
/CircleF {stroke [] 0 setdash hpt 0 360 arc fill} def
/C0 {BL [] 0 setdash 2 copy moveto vpt 90 450 arc} bind def
/C1 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C2 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C3 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C4 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C5 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc
	2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc} bind def
/C6 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C7 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C8 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C9 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 450 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C10 {BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
	2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C11 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C12 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C13 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C14 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 360 arc closepath fill
	vpt 0 360 arc} bind def
/C15 {BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/Rec {newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
	neg 0 rlineto closepath} bind def
/Square {dup Rec} bind def
/Bsquare {vpt sub exch vpt sub exch vpt2 Square} bind def
/S0 {BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare} bind def
/S1 {BL [] 0 setdash 2 copy vpt Square fill Bsquare} bind def
/S2 {BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S3 {BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare} bind def
/S4 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S5 {BL [] 0 setdash 2 copy 2 copy vpt Square fill
	exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S6 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S7 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S8 {BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare} bind def
/S9 {BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S10 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
	Bsquare} bind def
/S11 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
	Bsquare} bind def
/S12 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare} bind def
/S13 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S14 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S15 {BL [] 0 setdash 2 copy Bsquare fill Bsquare} bind def
/D0 {gsave translate 45 rotate 0 0 S0 stroke grestore} bind def
/D1 {gsave translate 45 rotate 0 0 S1 stroke grestore} bind def
/D2 {gsave translate 45 rotate 0 0 S2 stroke grestore} bind def
/D3 {gsave translate 45 rotate 0 0 S3 stroke grestore} bind def
/D4 {gsave translate 45 rotate 0 0 S4 stroke grestore} bind def
/D5 {gsave translate 45 rotate 0 0 S5 stroke grestore} bind def
/D6 {gsave translate 45 rotate 0 0 S6 stroke grestore} bind def
/D7 {gsave translate 45 rotate 0 0 S7 stroke grestore} bind def
/D8 {gsave translate 45 rotate 0 0 S8 stroke grestore} bind def
/D9 {gsave translate 45 rotate 0 0 S9 stroke grestore} bind def
/D10 {gsave translate 45 rotate 0 0 S10 stroke grestore} bind def
/D11 {gsave translate 45 rotate 0 0 S11 stroke grestore} bind def
/D12 {gsave translate 45 rotate 0 0 S12 stroke grestore} bind def
/D13 {gsave translate 45 rotate 0 0 S13 stroke grestore} bind def
/D14 {gsave translate 45 rotate 0 0 S14 stroke grestore} bind def
/D15 {gsave translate 45 rotate 0 0 S15 stroke grestore} bind def
/DiaE {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke} def
/BoxE {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke} def
/TriUE {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke} def
/TriDE {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke} def
/PentE {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore} def
/CircE {stroke [] 0 setdash 
  hpt 0 360 arc stroke} def
/Opaque {gsave closepath 1 setgray fill grestore 0 setgray closepath} def
/DiaW {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke} def
/BoxW {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke} def
/TriUW {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke} def
/TriDW {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke} def
/PentW {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore} def
/CircW {stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke} def
/BoxFill {gsave Rec 1 setgray fill grestore} def
/Density {
  /Fillden exch def
  currentrgbcolor
  /ColB exch def /ColG exch def /ColR exch def
  /ColR ColR Fillden mul Fillden sub 1 add def
  /ColG ColG Fillden mul Fillden sub 1 add def
  /ColB ColB Fillden mul Fillden sub 1 add def
  ColR ColG ColB setrgbcolor} def
/BoxColFill {gsave Rec PolyFill} def
/PolyFill {gsave Density fill grestore grestore} def
/h {rlineto rlineto rlineto gsave closepath fill grestore} bind def
%
% PostScript Level 1 Pattern Fill routine for rectangles
% Usage: x y w h s a XX PatternFill
%	x,y = lower left corner of box to be filled
%	w,h = width and height of box
%	  a = angle in degrees between lines and x-axis
%	 XX = 0/1 for no/yes cross-hatch
%
/PatternFill {gsave /PFa [ 9 2 roll ] def
  PFa 0 get PFa 2 get 2 div add PFa 1 get PFa 3 get 2 div add translate
  PFa 2 get -2 div PFa 3 get -2 div PFa 2 get PFa 3 get Rec
  gsave 1 setgray fill grestore clip
  currentlinewidth 0.5 mul setlinewidth
  /PFs PFa 2 get dup mul PFa 3 get dup mul add sqrt def
  0 0 M PFa 5 get rotate PFs -2 div dup translate
  0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 M 0 PFs V} for
  0 PFa 6 get ne {
	0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 2 1 roll M PFs 0 V} for
 } if
  stroke grestore} def
%
/languagelevel where
 {pop languagelevel} {1} ifelse
 2 lt
	{/InterpretLevel1 true def}
	{/InterpretLevel1 Level1 def}
 ifelse
%
% PostScript level 2 pattern fill definitions
%
/Level2PatternFill {
/Tile8x8 {/PaintType 2 /PatternType 1 /TilingType 1 /BBox [0 0 8 8] /XStep 8 /YStep 8}
	bind def
/KeepColor {currentrgbcolor [/Pattern /DeviceRGB] setcolorspace} bind def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke} 
>> matrix makepattern
/Pat1 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke
	0 4 M 4 8 L 8 4 L 4 0 L 0 4 L stroke}
>> matrix makepattern
/Pat2 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 0 8 L
	8 8 L 8 0 L 0 0 L fill}
>> matrix makepattern
/Pat3 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 8 M 8 -4 L
	0 12 M 12 0 L stroke}
>> matrix makepattern
/Pat4 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 0 M 8 12 L
	0 -4 M 12 8 L stroke}
>> matrix makepattern
/Pat5 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 8 M 4 -4 L
	0 12 M 8 -4 L 4 12 M 10 0 L stroke}
>> matrix makepattern
/Pat6 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 0 M 4 12 L
	0 -4 M 8 12 L 4 -4 M 10 8 L stroke}
>> matrix makepattern
/Pat7 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 8 -2 M -4 4 L
	12 0 M -4 8 L 12 4 M 0 10 L stroke}
>> matrix makepattern
/Pat8 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 -2 M 12 4 L
	-4 0 M 12 8 L -4 4 M 8 10 L stroke}
>> matrix makepattern
/Pat9 exch def
/Pattern1 {PatternBgnd KeepColor Pat1 setpattern} bind def
/Pattern2 {PatternBgnd KeepColor Pat2 setpattern} bind def
/Pattern3 {PatternBgnd KeepColor Pat3 setpattern} bind def
/Pattern4 {PatternBgnd KeepColor Landscape {Pat5} {Pat4} ifelse setpattern} bind def
/Pattern5 {PatternBgnd KeepColor Landscape {Pat4} {Pat5} ifelse setpattern} bind def
/Pattern6 {PatternBgnd KeepColor Landscape {Pat9} {Pat6} ifelse setpattern} bind def
/Pattern7 {PatternBgnd KeepColor Landscape {Pat8} {Pat7} ifelse setpattern} bind def
} def
%
%
%End of PostScript Level 2 code
%
/PatternBgnd {
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
} def
%
% Substitute for Level 2 pattern fill codes with
% grayscale if Level 2 support is not selected.
%
/Level1PatternFill {
/Pattern1 {0.250 Density} bind def
/Pattern2 {0.500 Density} bind def
/Pattern3 {0.750 Density} bind def
/Pattern4 {0.125 Density} bind def
/Pattern5 {0.375 Density} bind def
/Pattern6 {0.625 Density} bind def
/Pattern7 {0.875 Density} bind def
} def
%
% Now test for support of Level 2 code
%
Level1 {Level1PatternFill} {Level2PatternFill} ifelse
%
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont pop
%
% Base ISO8859-1 character encoding plus support macros for UTF-8 encoding
% via the glyphshow operator
%
/reencodeISO {
dup dup findfont dup length dict begin
{ 1 index /FID ne { def }{ pop pop } ifelse } forall
currentdict /CharStrings known {
	CharStrings /Idieresis known {
		/Encoding ISOLatin1Encoding def } if
} if
currentdict end definefont
} def
/ISOLatin1Encoding [
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/space/exclam/quotedbl/numbersign/dollar/percent/ampersand/quoteright
/parenleft/parenright/asterisk/plus/comma/minus/period/slash
/zero/one/two/three/four/five/six/seven/eight/nine/colon/semicolon
/less/equal/greater/question/at/A/B/C/D/E/F/G/H/I/J/K/L/M/N
/O/P/Q/R/S/T/U/V/W/X/Y/Z/bracketleft/backslash/bracketright
/asciicircum/underscore/quoteleft/a/b/c/d/e/f/g/h/i/j/k/l/m
/n/o/p/q/r/s/t/u/v/w/x/y/z/braceleft/bar/braceright/asciitilde
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/dotlessi/grave/acute/circumflex/tilde/macron/breve
/dotaccent/dieresis/.notdef/ring/cedilla/.notdef/hungarumlaut
/ogonek/caron/space/exclamdown/cent/sterling/currency/yen/brokenbar
/section/dieresis/copyright/ordfeminine/guillemotleft/logicalnot
/hyphen/registered/macron/degree/plusminus/twosuperior/threesuperior
/acute/mu/paragraph/periodcentered/cedilla/onesuperior/ordmasculine
/guillemotright/onequarter/onehalf/threequarters/questiondown
/Agrave/Aacute/Acircumflex/Atilde/Adieresis/Aring/AE/Ccedilla
/Egrave/Eacute/Ecircumflex/Edieresis/Igrave/Iacute/Icircumflex
/Idieresis/Eth/Ntilde/Ograve/Oacute/Ocircumflex/Otilde/Odieresis
/multiply/Oslash/Ugrave/Uacute/Ucircumflex/Udieresis/Yacute
/Thorn/germandbls/agrave/aacute/acircumflex/atilde/adieresis
/aring/ae/ccedilla/egrave/eacute/ecircumflex/edieresis/igrave
/iacute/icircumflex/idieresis/eth/ntilde/ograve/oacute/ocircumflex
/otilde/odieresis/divide/oslash/ugrave/uacute/ucircumflex/udieresis
/yacute/thorn/ydieresis
] def

/Gshow { dup type /stringtype eq { show } { glyphshow } ifelse } def

/Gsall { {Gshow} forall } def
/Gwidth {
	dup currentpoint pop exch
	gsave 6 array currentmatrix nulldevice setmatrix Gsall currentpoint pop grestore sub
	} def
/GLshow {currentpoint stroke M 0 vshift R 
	Blacktext {gsave 0 setgray Gsall grestore} {Gsall} ifelse} def
/GRshow {currentpoint stroke M dup Gwidth vshift R
	Blacktext {gsave 0 setgray Gsall grestore} {Gsall} ifelse} def
/GCshow {currentpoint stroke M dup Gwidth 2 div vshift R 
	Blacktext {gsave 0 setgray Gsall grestore} {Gsall} ifelse} def
/MFshow {
   { dup 5 get 3 ge
     { 5 get 3 eq {gsave} {grestore} ifelse }
     {dup dup 0 get findfont exch 1 get scalefont setfont
     [ currentpoint ] exch dup 2 get 0 exch R dup 5 get 2 ne {dup dup 6
     get exch 4 get {Gshow} {stringwidth pop 0 R} ifelse }if dup 5 get 0 eq
     {dup 3 get {2 get neg 0 exch R pop} {pop aload pop M} ifelse} {dup 5
     get 1 eq {dup 2 get exch dup 3 get exch 6 get stringwidth pop -2 div
     dup 0 R} {dup 6 get stringwidth pop -2 div 0 R 6 get
     show 2 index {aload pop M neg 3 -1 roll neg R pop pop} {pop pop pop
     pop aload pop M} ifelse }ifelse }ifelse }
     ifelse }
   forall} def
/Gswidth {dup type /stringtype eq {stringwidth} {pop (n) stringwidth} ifelse} def
/MFwidth {0 exch { dup 5 get 3 ge { 5 get 3 eq { 0 } { pop } ifelse }
 {dup 3 get{dup dup 0 get findfont exch 1 get scalefont setfont
     6 get Gswidth pop add} {pop} ifelse} ifelse} forall} def
/MLshow { currentpoint stroke M
  0 exch R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MRshow { currentpoint stroke M
  exch dup MFwidth neg 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MCshow { currentpoint stroke M
  exch dup MFwidth -2 div 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/XYsave    { [( ) 1 2 true false 3 ()] } bind def
/XYrestore { [( ) 1 2 true false 4 ()] } bind def
/Helvetica reencodeISO def
end
%%EndProlog
%%Page: 1 1
gnudict begin
gsave
doclip
50 50 translate
0.100 0.100 scale
90 rotate
0 -5040 translate
0 setgray
newpath
(Helvetica) findfont 250 scalefont setfont
5.000 UL
LTb
2017 800 M
126 0 V
3814 0 R
-126 0 V
stroke
1867 800 M
[ [(Helvetica) 300.0 0.0 true true 0 (-2)]
] -100.0 MRshow
5.000 UL
LTb
2017 898 M
63 0 V
3877 0 R
-63 0 V
2017 997 M
63 0 V
3877 0 R
-63 0 V
-3877 98 R
63 0 V
3877 0 R
-63 0 V
-3877 99 R
63 0 V
3877 0 R
-63 0 V
-3877 98 R
126 0 V
3814 0 R
-126 0 V
stroke
1867 1292 M
[ [(Helvetica) 300.0 0.0 true true 0 (-1.5)]
] -100.0 MRshow
5.000 UL
LTb
2017 1391 M
63 0 V
3877 0 R
-63 0 V
-3877 98 R
63 0 V
3877 0 R
-63 0 V
-3877 99 R
63 0 V
3877 0 R
-63 0 V
-3877 98 R
63 0 V
3877 0 R
-63 0 V
-3877 99 R
126 0 V
3814 0 R
-126 0 V
stroke
1867 1785 M
[ [(Helvetica) 300.0 0.0 true true 0 (-1)]
] -100.0 MRshow
5.000 UL
LTb
2017 1883 M
63 0 V
3877 0 R
-63 0 V
-3877 99 R
63 0 V
3877 0 R
-63 0 V
-3877 98 R
63 0 V
3877 0 R
-63 0 V
-3877 99 R
63 0 V
3877 0 R
-63 0 V
-3877 98 R
126 0 V
3814 0 R
-126 0 V
stroke
1867 2277 M
[ [(Helvetica) 300.0 0.0 true true 0 (-0.5)]
] -100.0 MRshow
5.000 UL
LTb
2017 2376 M
63 0 V
3877 0 R
-63 0 V
-3877 98 R
63 0 V
3877 0 R
-63 0 V
-3877 99 R
63 0 V
3877 0 R
-63 0 V
-3877 98 R
63 0 V
3877 0 R
-63 0 V
-3877 99 R
126 0 V
3814 0 R
-126 0 V
stroke
1867 2770 M
[ [(Helvetica) 300.0 0.0 true true 0 ( 0)]
] -100.0 MRshow
5.000 UL
LTb
2017 2868 M
63 0 V
3877 0 R
-63 0 V
-3877 98 R
63 0 V
3877 0 R
-63 0 V
-3877 99 R
63 0 V
3877 0 R
-63 0 V
-3877 98 R
63 0 V
3877 0 R
-63 0 V
-3877 99 R
126 0 V
3814 0 R
-126 0 V
stroke
1867 3262 M
[ [(Helvetica) 300.0 0.0 true true 0 ( 0.5)]
] -100.0 MRshow
5.000 UL
LTb
2017 3360 M
63 0 V
3877 0 R
-63 0 V
-3877 99 R
63 0 V
3877 0 R
-63 0 V
-3877 98 R
63 0 V
3877 0 R
-63 0 V
-3877 99 R
63 0 V
3877 0 R
-63 0 V
-3877 98 R
126 0 V
3814 0 R
-126 0 V
stroke
1867 3754 M
[ [(Helvetica) 300.0 0.0 true true 0 ( 1)]
] -100.0 MRshow
5.000 UL
LTb
2017 3853 M
63 0 V
3877 0 R
-63 0 V
-3877 98 R
63 0 V
3877 0 R
-63 0 V
-3877 99 R
63 0 V
3877 0 R
-63 0 V
-3877 98 R
63 0 V
3877 0 R
-63 0 V
-3877 99 R
126 0 V
3814 0 R
-126 0 V
stroke
1867 4247 M
[ [(Helvetica) 300.0 0.0 true true 0 ( 1.5)]
] -100.0 MRshow
5.000 UL
LTb
2017 4345 M
63 0 V
3877 0 R
-63 0 V
-3877 99 R
63 0 V
3877 0 R
-63 0 V
-3877 98 R
63 0 V
3877 0 R
-63 0 V
-3877 99 R
63 0 V
3877 0 R
-63 0 V
-3877 98 R
126 0 V
3814 0 R
-126 0 V
stroke
1867 4739 M
[ [(Helvetica) 300.0 0.0 true true 0 ( 2)]
] -100.0 MRshow
5.000 UL
LTb
2017 800 M
0 126 V
0 3813 R
0 -126 V
stroke
2017 550 M
[ [(Helvetica) 300.0 0.0 true true 0 ( 0)]
] -100.0 MCshow
5.000 UL
LTb
2126 800 M
0 63 V
0 3876 R
0 -63 V
2236 800 M
0 63 V
0 3876 R
0 -63 V
2345 800 M
0 63 V
0 3876 R
0 -63 V
2455 800 M
0 63 V
0 3876 R
0 -63 V
2564 800 M
0 126 V
0 3813 R
0 -126 V
stroke
2564 550 M
[ [(Helvetica) 300.0 0.0 true true 0 ( 50)]
] -100.0 MCshow
5.000 UL
LTb
2674 800 M
0 63 V
0 3876 R
0 -63 V
2783 800 M
0 63 V
0 3876 R
0 -63 V
2893 800 M
0 63 V
0 3876 R
0 -63 V
3002 800 M
0 63 V
0 3876 R
0 -63 V
3111 800 M
0 126 V
0 3813 R
0 -126 V
stroke
3111 550 M
[ [(Helvetica) 300.0 0.0 true true 0 ( 100)]
] -100.0 MCshow
5.000 UL
LTb
3221 800 M
0 63 V
0 3876 R
0 -63 V
3330 800 M
0 63 V
0 3876 R
0 -63 V
3440 800 M
0 63 V
0 3876 R
0 -63 V
3549 800 M
0 63 V
0 3876 R
0 -63 V
3659 800 M
0 126 V
0 3813 R
0 -126 V
stroke
3659 550 M
[ [(Helvetica) 300.0 0.0 true true 0 ( 150)]
] -100.0 MCshow
5.000 UL
LTb
3768 800 M
0 63 V
0 3876 R
0 -63 V
3878 800 M
0 63 V
0 3876 R
0 -63 V
3987 800 M
0 63 V
0 3876 R
0 -63 V
4096 800 M
0 63 V
0 3876 R
0 -63 V
4206 800 M
0 126 V
0 3813 R
0 -126 V
stroke
4206 550 M
[ [(Helvetica) 300.0 0.0 true true 0 ( 200)]
] -100.0 MCshow
5.000 UL
LTb
4315 800 M
0 63 V
0 3876 R
0 -63 V
4425 800 M
0 63 V
0 3876 R
0 -63 V
4534 800 M
0 63 V
0 3876 R
0 -63 V
4644 800 M
0 63 V
0 3876 R
0 -63 V
4753 800 M
0 126 V
0 3813 R
0 -126 V
stroke
4753 550 M
[ [(Helvetica) 300.0 0.0 true true 0 ( 250)]
] -100.0 MCshow
5.000 UL
LTb
4863 800 M
0 63 V
0 3876 R
0 -63 V
4972 800 M
0 63 V
0 3876 R
0 -63 V
5081 800 M
0 63 V
0 3876 R
0 -63 V
5191 800 M
0 63 V
0 3876 R
0 -63 V
5300 800 M
0 126 V
0 3813 R
0 -126 V
stroke
5300 550 M
[ [(Helvetica) 300.0 0.0 true true 0 ( 300)]
] -100.0 MCshow
5.000 UL
LTb
5410 800 M
0 63 V
0 3876 R
0 -63 V
5519 800 M
0 63 V
0 3876 R
0 -63 V
5629 800 M
0 63 V
0 3876 R
0 -63 V
5738 800 M
0 63 V
0 3876 R
0 -63 V
5848 800 M
0 126 V
0 3813 R
0 -126 V
stroke
5848 550 M
[ [(Helvetica) 300.0 0.0 true true 0 ( 350)]
] -100.0 MCshow
5.000 UL
LTb
5957 800 M
0 63 V
0 3876 R
0 -63 V
stroke
2017 4739 N
0 -3939 V
3940 0 V
0 3939 V
-3940 0 V
Z stroke
LCb setrgbcolor
992 2769 M
currentpoint gsave translate -270 rotate 0 0 moveto
[ [(Helvetica) 300.0 0.0 true true 0 (z [kpc])]
] -100.0 MCshow
grestore
LTb
LCb setrgbcolor
3987 175 M
[ [(Helvetica) 300.0 0.0 true true 0 (l [degree])]
] -100.0 MCshow
LTb
1.000 UP
5.000 UL
LTb
% Begin plot #1
1.200 UP
3.000 UL
LT0
0.13 0.55 0.13 C LCb setrgbcolor
4734 4122 M
[ [(Helvetica) 330.0 0.0 true true 0 (HII-RN-B93)]
] -110.0 MRshow
LT0
0.13 0.55 0.13 C 2181 2744 Crs
2186 2883 Crs
2198 2752 Crs
2204 2796 Crs
2224 2841 Crs
2335 2724 Crs
2365 2860 Crs
2453 2725 Crs
2603 2770 Crs
2670 2763 Crs
2708 2800 Crs
2719 2744 Crs
2748 2828 Crs
2785 3005 Crs
2801 2888 Crs
2836 2813 Crs
2934 2888 Crs
2943 2772 Crs
2970 2719 Crs
3005 2911 Crs
3050 2674 Crs
3052 2705 Crs
3071 3092 Crs
3076 2615 Crs
3085 3106 Crs
3101 2820 Crs
3144 2712 Crs
3152 2803 Crs
3162 2802 Crs
3168 2843 Crs
3175 2761 Crs
3186 2852 Crs
3191 2717 Crs
3203 2666 Crs
3207 2712 Crs
3212 2805 Crs
3222 2775 Crs
3223 2801 Crs
3235 2741 Crs
3238 2807 Crs
3239 2789 Crs
3242 2812 Crs
3245 2783 Crs
3259 2747 Crs
3272 2773 Crs
3284 2662 Crs
3304 2859 Crs
3324 2731 Crs
3334 2827 Crs
3337 2763 Crs
3364 2531 Crs
3480 2813 Crs
3531 2826 Crs
3549 2798 Crs
3666 2726 Crs
3673 3027 Crs
3676 2736 Crs
3710 3019 Crs
3718 3043 Crs
3759 3062 Crs
3761 2955 Crs
3772 2685 Crs
3869 2715 Crs
4121 3041 Crs
4125 2768 Crs
4128 2680 Crs
4147 2649 Crs
4167 2660 Crs
4172 2699 Crs
4182 2577 Crs
4241 2798 Crs
4283 2719 Crs
4304 2606 Crs
4324 2369 Crs
4329 2717 Crs
4336 2664 Crs
4357 2842 Crs
4405 2750 Crs
4411 2870 Crs
4470 2731 Crs
4471 2866 Crs
4523 2682 Crs
4546 2862 Crs
4551 2453 Crs
4551 2654 Crs
4562 2795 Crs
4575 2756 Crs
4584 2813 Crs
4586 2755 Crs
4595 2635 Crs
4596 2653 Crs
4606 2684 Crs
4619 2720 Crs
4627 2661 Crs
4633 2726 Crs
4640 2642 Crs
4642 2576 Crs
4653 2499 Crs
4660 2723 Crs
4678 2797 Crs
4709 2824 Crs
4709 2906 Crs
4725 2922 Crs
4729 2743 Crs
4731 2362 Crs
4741 2769 Crs
4764 2683 Crs
4770 2847 Crs
4774 2747 Crs
4779 2767 Crs
4785 2727 Crs
4792 2917 Crs
4795 2748 Crs
4797 2753 Crs
4798 2695 Crs
4804 2813 Crs
4812 2709 Crs
4812 2629 Crs
4815 2757 Crs
4817 2725 Crs
4817 2741 Crs
4818 2950 Crs
4844 2752 Crs
4854 2732 Crs
4858 2705 Crs
4858 2680 Crs
4863 2778 Crs
4867 2496 Crs
4868 2661 Crs
4878 2780 Crs
4879 2776 Crs
4885 2784 Crs
4886 2772 Crs
4894 2744 Crs
4897 2803 Crs
4902 2766 Crs
4907 2844 Crs
4914 2785 Crs
4929 2658 Crs
4930 2721 Crs
4933 2602 Crs
4939 2753 Crs
4950 2786 Crs
4952 2701 Crs
4955 2720 Crs
4957 2761 Crs
4960 2775 Crs
4972 2764 Crs
4973 2819 Crs
4977 2765 Crs
4981 2786 Crs
4985 2833 Crs
4985 2778 Crs
5003 2671 Crs
5023 2658 Crs
5033 2710 Crs
5101 2685 Crs
5107 2722 Crs
5111 2675 Crs
5113 2681 Crs
5123 2551 Crs
5129 2757 Crs
5134 2653 Crs
5146 3030 Crs
5149 2762 Crs
5150 2755 Crs
5151 2829 Crs
5158 2911 Crs
5160 2607 Crs
5180 2685 Crs
5188 2580 Crs
5195 2612 Crs
5195 2851 Crs
5195 2352 Crs
5205 2739 Crs
5212 2848 Crs
5223 2870 Crs
5235 2702 Crs
5251 2780 Crs
5253 2763 Crs
5259 2549 Crs
5262 2613 Crs
5268 2684 Crs
5270 2752 Crs
5283 2795 Crs
5289 2785 Crs
5293 2743 Crs
5296 2736 Crs
5306 2768 Crs
5340 2692 Crs
5354 2779 Crs
5065 4122 Crs
% End plot #1
5.000 UL
LTb
2017 4739 N
0 -3939 V
3940 0 V
0 3939 V
-3940 0 V
Z stroke
1.000 UP
5.000 UL
LTb
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Helvetica
%%Pages: 1
